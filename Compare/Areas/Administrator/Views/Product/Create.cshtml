@model Compare.BLL.DTOs.Product.CreateProductDTO
@using Compare.BLL.DTOs.Configuration
@using Compare
@using Compare.Utilits
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
    ViewData["Title"] = SharedLocalizer["Creating a product"];
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";

    int lngIndex = 0;
}

<div class="py-4">
    <div class="d-flex justify-content-between w-100 flex-wrap">
        <div class="mb-3 mb-lg-0">
            <h1 class="h4">@SharedLocalizer["Creating a product"]</h1>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 mb-4">
        <div class="card border-light shadow-sm components-section">
            <div class="card-body">
                <div id="gridContainer">
                    <div class="row md-4">
                        <form asp-area="Administrator" asp-controller="Product" asp-action="Create" method="post" id="form" enctype="multipart/form-data">
                            <div class="col-lg-12 col-sm-12">
                                <div asp-validation-summary="All" class="text-danger"></div>

                                @foreach (LanguageDTO languageDTO in ViewBag.Languages)
                                {
                                    <h3>@languageDTO.Name</h3>
                                    <hr />
                                    <input type="hidden" class="form-control" name="ProductTranslates[@lngIndex].LanguageCulture" value="@languageDTO.Culture" />
                                    <div class="mb-3">
                                        <label>@SharedLocalizer["Product name"] *</label>
                                        <div id="product-name-@lngIndex"></div>
                                    </div>
                                    <div class="mb-3">
                                        <label>@SharedLocalizer["Meta title"] *</label>
                                        <div id="meta-title-@lngIndex"></div>
                                    </div>
                                    <div class="mb-3">
                                        <label>@SharedLocalizer["Meta description"] *</label>
                                        <div id="meta-description-@lngIndex"></div>
                                    </div>
                                    <div class="mb-3">
                                        <label>@SharedLocalizer["Short description"]</label>
                                        <div id="short-description-@lngIndex"></div>
                                    </div>
                                    <div class="mb-3">
                                        <label>@SharedLocalizer["Description"]</label>
                                        <div id="description-editor-@lngIndex"></div>
                                    </div>
                                    <script>
                                    $(function () {
                                        $("#product-name-@lngIndex").dxTextBox({
                                            name: "ProductTranslates[@lngIndex].ProductName"
                                        }).dxValidator({
                                            validationRules: [{
                                                type: "required",
                                                message: '@SharedLocalizer["Enter product name"]'
                                            }]
                                        }).dxTextBox("instance");

                                        $("#meta-title-@lngIndex").dxTextBox({
                                            name: "ProductTranslates[@lngIndex].MetaTitle"
                                        }).dxValidator({
                                            validationRules: [{
                                                type: "required",
                                                message: '@SharedLocalizer["Enter meta title"]'
                                            }]
                                        }).dxTextBox("instance");

                                        $("#meta-description-@lngIndex").dxTextBox({
                                            name: "ProductTranslates[@lngIndex].MetaDescription"
                                        }).dxValidator({
                                            validationRules: [{
                                                type: "required",
                                                message: '@SharedLocalizer["Enter meta description"]'
                                            }]
                                        }).dxTextBox("instance");

                                        $("#short-description-@lngIndex").dxTextBox({
                                            name: "ProductTranslates[@lngIndex].ShortDescription"
                                        }).dxValidator({
                                            validationRules: [{
                                                type: "required",
                                                message: '@SharedLocalizer["Enter short description"]'
                                            }]
                                        }).dxTextBox("instance");

                                        $("#description-editor-@lngIndex").dxHtmlEditor({
                                            height: 350,
                                            toolbar: {
                                                items: [
                                                    "undo", "redo", "separator",
                                                    {
                                                        formatName: "size",
                                                        formatValues: ["8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt"]
                                                    },
                                                    {
                                                        formatName: "font",
                                                        formatValues: ["Arial", "Courier New", "Georgia", "Impact", "Lucida Console", "Tahoma", "Times New Roman", "Verdana"]
                                                    },
                                                    "separator", "bold", "italic", "strike", "underline", "separator",
                                                    "alignLeft", "alignCenter", "alignRight", "alignJustify", "separator",
                                                    "orderedList", "bulletList", "separator",
                                                    {
                                                        formatName: "header",
                                                        formatValues: [false, 1, 2, 3, 4, 5]
                                                    }, "separator",
                                                    "color", "background", "separator",
                                                    "link", "image", "separator",
                                                    "clear", "codeBlock", "blockquote", "separator",
                                                    "insertTable", "deleteTable",
                                                    "insertRowAbove", "insertRowBelow", "deleteRow",
                                                    "insertColumnLeft", "insertColumnRight", "deleteColumn"
                                                ]
                                            },
                                            name: `ProductTranslates[@lngIndex].FullDescription`,
                                        }).dxHtmlEditor("instance");
                                    });
                                    </script>

                                    lngIndex++;
                                }

                                <h3>@SharedLocalizer["Data"]</h3>
                                <hr />
                                <div class="mb-3">
                                    <label>@SharedLocalizer["Categories"] *</label>
                                    <div id="CategoriesId"></div>
                                    <div id="treeBox"></div>
                                </div>
                                <div class="mb-3">
                                    <label>@SharedLocalizer["Manufacture"] *</label>
                                    <div id="manufactureSelection"></div>
                                </div>
                                <div class="mb-3">
                                    <label>@SharedLocalizer["Sorting"]</label>
                                    <div id="displayOrder"></div>
                                </div>
                                <div class="mb-3">
                                    <label>@SharedLocalizer["Picture"] *</label>
                                    <div id="file"></div>
                                </div>
                                <div class="mb-3">
                                    <label>@SharedLocalizer["Pictures"]</label>
                                    <div id="files"></div>
                                </div>
                                <div class="mb-3">
                                    <div id="published"></div>
                                </div>

                                <br />
                                <div id="summary"></div>
                                <br />
                                <div id="button"></div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{    
    <script>
        $(function () {
            var treeView;

            var syncTreeViewSelection = function(treeView, value){
                if (!value) {
                    treeView.unselectAll();
                    return;
                }

                value.forEach(function(key){
                    treeView.selectItem(key);
                });

                if (value !== undefined) {
                    let catId = document.getElementById('CategoriesId');
                    while (catId.hasChildNodes()) {
                        catId.removeChild(catId.lastChild);
                    }
                    for (i = 0; i < value.length; i++) {
                        var input = document.createElement("input");
                        input.type = "hidden";
                        input.name = "CategoriesId[" + i + "]";
                        input.value = value[i];
                        catId.appendChild(input);
                    }
                }
            };

            var getSelectedItemsKeys = function(items) {
                var result = [];
                items.forEach(function(item) {
                    if(item.selected) {
                        result.push(item.key);
                    }
                    if(item.items.length) {
                        result = result.concat(getSelectedItemsKeys(item.items));
                    }
                });
                return result;
            };

            $("#treeBox").dxDropDownBox({
                value: "",
                valueExpr: "id",
                displayExpr: "name",
                placeholder: '@SharedLocalizer["Select categories"]',
                showClearButton: true,
                dataSource: new DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: `@API.GetAllCategories`,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                contentTemplate: function(e){
                    var value = e.component.option("value"),
                    $treeView = $("<div>").dxTreeView({
                        dataSource: e.component.option("dataSource"),
                        dataStructure: "plain",
                        keyExpr: "id",
                        parentIdExpr: "parentCategoryId",
                        selectionMode: "multiple",
                        displayExpr: "name",
                        selectByClick: true,
                        onContentReady: function(args){
                            syncTreeViewSelection(args.component, value);
                        },
                        selectNodesRecursive: false,
                        showCheckBoxesMode: "normal",
                        onItemSelectionChanged: function(args){
                            var nodes = args.component.getNodes();
                            value = getSelectedItemsKeys(nodes);

                            e.component.option("value", value);
                        }
                    });

                    treeView = $treeView.dxTreeView("instance");

                    e.component.on("valueChanged", function(args){
                        var value = args.value;
                        syncTreeViewSelection(treeView, value);
                    });

                    return $treeView;
                }
            }).dxValidator({
                validationRules: [{
                    type: "required",
                    message: '@SharedLocalizer["Select categories"]'
                }]
            });

            $("#displayOrder").dxNumberBox({
                value: 0,
                min: 0,
                showSpinButtons: true,
                name: 'DisplayOrder',
            }).dxValidator({
                validationRules: [{
                    type: "required",
                    message: '@SharedLocalizer["Enter sort number"]'
                }]
            });

            $("#manufactureSelection").dxSelectBox({
                dataSource: new DevExpress.data.DataSource({
                    store: new DevExpress.data.AspNet.createStore({
                        key: "id",
                        loadUrl: `@API.GeAllManufacturiesAPI`,
                        loadMode: "raw",
                        onBeforeSend: function (method, ajaxOptions) {
                            ajaxOptions.xhrFields = { withCredentials: true };
                        }
                    }),
                    paginate: true,
                    pageSize:30
                }),
                displayExpr: "name",
                valueExpr: "id",
                name: 'ManufactureId',
                searchEnabled: true
            }).dxValidator({
                validationRules: [{
                    type: "required",
                    message: '@SharedLocalizer["Choose manufacture"]'
                }]
            });

            $("#file").dxFileUploader({
                selectButtonText: '@SharedLocalizer["Choose a picture"]',
                name: "FormFile",
                labelText: '@SharedLocalizer["or drag picture"]',
                accept: "*",
                uploadMode: "or drag",
                multiple: false
            }).dxValidator({
                validationRules: [{
                    type: "required",
                    message: '@SharedLocalizer["Select picture"]'
                }]
            });

            $("#files").dxFileUploader({
                selectButtonText: '@SharedLocalizer["Choose a pictures"]',
                name: "FormFiles",
                labelText: '@SharedLocalizer["or drag pictures"]',
                accept: "*",
                uploadMode: "or drag",
                multiple: true
            });

            $("#published").dxCheckBox({
                text: '@SharedLocalizer["Active"]',
                name: 'Published',
                value: true
            });

            $("#button").dxButton({
                text: '@SharedLocalizer["Create"]',
                type: "success",
                useSubmitBehavior: true,
            });
            $("#summary").dxValidationSummary({});

        });

    </script>

}